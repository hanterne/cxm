#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

typedef int E;

struct LNode {
    E element;
    struct LNode *next;
};

typedef struct LNode * Node;

struct Queue {
    Node front, rear;
};

typedef struct Queue * LinkedQueue;

bool initQueue(LinkedQueue queue) {
    Node node = malloc(sizeof(struct LNode));
    if(node == NULL) return false;
    queue->rear = queue->front = node;
    queue->front->next = NULL;
    return true;
}

bool enQueue(LinkedQueue queue, E element) {
    Node node = malloc(sizeof(struct  LNode));
    if(node == NULL) return false;
    node->element = element;
    node->next = NULL;
    queue->rear->next = node;
    queue->rear = node;
    return true;
}

bool isEmpty(LinkedQueue queue) {
    return queue->rear == queue->front;
}

E deQueue(LinkedQueue queue) {
    Node tmp = queue->front->next;
    E e = tmp->element;
    queue->front->next = tmp->next;
    free(tmp);
    return e;
}

void printQueue(LinkedQueue queue) {
    printf("<<< ");
    Node node = queue->front->next;
    while(node != NULL) {
        printf("%d ", node->element);
        node = node->next;
    }
    printf(" <<<\n");
}

int main() {
    struct Queue queue;
    initQueue(&queue);
    for(int i = 0; i < 10; i++) {
        enQueue(&queue, i*100);
    }
    printQueue(&queue);
    while(!isEmpty(&queue)) {
        printf("%d ", deQueue(&queue));
    }
    return 0;
}
